// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"
)

type Querier interface {
	//CreateAccount
	//
	//  INSERT INTO account (token, name, chat_id, status)
	//  VALUES ($1, $2, $3, $4)
	//  RETURNING id
	CreateAccount(ctx context.Context, arg CreateAccountParams) (int64, error)
	//CreateFence
	//
	//  INSERT INTO fence (name, longitude, latitude, radius)
	//  VALUES ($1, $2, $3, $4)
	//  RETURNING id
	CreateFence(ctx context.Context, arg CreateFenceParams) (int64, error)
	//CreateMigration
	//
	//  INSERT INTO migration (id, applied)
	//  VALUES ($1, $2)
	//  RETURNING id
	CreateMigration(ctx context.Context, arg CreateMigrationParams) (string, error)
	//CreateUpdate
	//
	//  INSERT INTO updates (account_id, created, data)
	//  VALUES ($1, $2, $3)
	//  RETURNING id
	CreateUpdate(ctx context.Context, arg CreateUpdateParams) (int64, error)
	//DeleteFence
	//
	//  DELETE
	//  FROM fence
	//  WHERE id = $1
	DeleteFence(ctx context.Context, id int64) error
	//GetAccount
	//
	//  SELECT id, token, name, chat_id, status
	//  FROM account
	//  WHERE id = $1
	//  LIMIT 1
	GetAccount(ctx context.Context, id int64) (Account, error)
	//GetAccountByChatID
	//
	//  SELECT id, token, name, chat_id, status
	//  FROM account
	//  WHERE chat_id = $1
	//  LIMIT 1
	GetAccountByChatID(ctx context.Context, chatID *int64) (Account, error)
	//GetAccountByToken
	//
	//  SELECT id, token, name, chat_id, status
	//  FROM account
	//  WHERE token = $1
	//  LIMIT 1
	GetAccountByToken(ctx context.Context, token string) (Account, error)
	//GetAllAccounts
	//
	//  SELECT id, token, name, chat_id, status
	//  FROM account
	//  ORDER BY id
	GetAllAccounts(ctx context.Context) ([]Account, error)
	//GetAllFences
	//
	//  SELECT id, name, longitude, latitude, radius
	//  FROM fence
	GetAllFences(ctx context.Context) ([]Fence, error)
	//GetLastUpdateByAccountID
	//
	//  SELECT id, account_id, created, data
	//  FROM updates
	//  WHERE account_id = $1
	//  ORDER BY id DESC
	//  LIMIT 1
	GetLastUpdateByAccountID(ctx context.Context, accountID int64) ([]Update, error)
	//GetLatestUpdatesByAccountID
	//
	//  SELECT id, account_id, created, data
	//  FROM updates
	//  WHERE account_id = $1
	//  ORDER BY id DESC
	//  LIMIT 10
	GetLatestUpdatesByAccountID(ctx context.Context, accountID int64) ([]Update, error)
	//GetMigrations
	//
	//  SELECT id, applied
	//  FROM migration
	//  ORDER BY id
	GetMigrations(ctx context.Context) ([]Migration, error)
	//UpdateAccountStatus
	//
	//  UPDATE account
	//  SET status = $2
	//  WHERE id = $1
	UpdateAccountStatus(ctx context.Context, arg UpdateAccountStatusParams) error
}

var _ Querier = (*Queries)(nil)
